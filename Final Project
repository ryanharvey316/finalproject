//Global variables
var currentColor = color(0,0,0);
var currentScene = 1;
var score = 0;
var starXposition = [];
var starYposition = [];
var rockSpeed = 3;

//Button Code
 var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 120;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
    this.buttonColor = config.buttonColor || color(255, 255, 255);
};

Button.prototype.draw = function() {
    fill(this.buttonColor);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+35, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {  
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

var buttonA = new Button({
    x: 120,
    y: 300,
    label: "Start",
    onClick: function(){
        currentScene = 2;
    },
    buttonColor: color(128, 150, 148)
});

var buttonB = new Button({
    x: 120,
    y: 300,
    label: "Restart",
    onClick: function(){
    Program.restart();
    },
    buttonColor: color(79, 84, 84)
});


mouseClicked = function() {
    if(currentScene === 1){
    buttonA.handleMouseClick();
    }
    if(currentScene === 3) {
    buttonB.handleMouseClick();
}
};

var gameover = function() {
background(28, 27, 27);
fill(255, 255, 255);
textSize(20);
text("Game Over",145,100);
buttonB.draw(); 
};

var Ship = function(x, y) {
    this.x = x;
    this.y = y;
    this.rocks = 0;
    this.aliens = 0;
};

var Rock = function(x, y) {
    this.x = x;
    this.y = y;
};

var Gold = function(x,y) {
   this.x = x;
   this.y = y;
};

Ship.prototype.draw = function() {
    this.y = constrain(this.y, 0, height);
    fill(138, 95, 95);
    triangle(this.x-41,this.y+-10,this.x+-30,this.y+16,this.x+16,this.y+7);
    fill(69, 65, 69);
    triangle(this.x-31,this.y+-7,this.x+-17,this.y+5,this.x+6,this.y+4);
    fill(181, 178, 165);
    quad(this.x+-56,this.y+1,this.x+-56,this.y+12,this.x+-30,this.y+16,this.x+-41,this.y+-10);
   quad(this.x+-16,this.y+7,this.x+-78,this.y+6,this.x+-56,this.y+20,this.x+20,this.y+7);
};

Ship.prototype.checkForRockGrab = function(rock) {
    if ((rock.x >= this.x-60 && rock.x <= (this.x)) &&
        (rock.y >= this.y && rock.y <= (this.y+10))) {
        this.rocks++;
        currentScene = 3;
    }
};

Ship.prototype.checkForGoldGrab = function(gold) {
    if ((gold.x >= this.x-60 && gold.x <= (this.x)) &&
        (gold.y >= this.y && gold.y <= (this.y+20))) {
            gold.y = -400;
            score++;
    }
};

Rock.prototype.draw = function() {
  image(getImage("cute/Rock"),this.x+-11,this.y+-32,35,57);
};

Gold.prototype.draw = function() {
fill(251, 255, 0);
ellipse(this.x,this.y,10,10);
};


Ship.prototype.hop = function() {
    this.y -= 5;
};

Ship.prototype.fall = function() {
    this.y += 5;
};

var ship = new Ship(160, 300);

var rocks = [];
for (var i = 0; i <  1000; i++) {  
    rocks.push(new Rock(i * 40 + 300, random(20, 250)));
}

var golds = [];
for (var i = 0; i <  1000; i++) {  
    golds.push(new Gold(i * 200 + 300, random(20, 350)));
}


//Scene Change 
draw = function() {
if(currentScene === 1)
{
  background(0, 0, 0);
    for (var i = 0; i < 21; i++) {
        starXposition.push(random(25,375));
        starYposition.push(random(25,375));
        image(getImage("space/star"),starXposition[i],starYposition[i],10,10);
    }
      buttonA.draw();
         //static
    fill(235, 235, 12);
    rect(70,81,255,82);
    fill(255, 255, 255);
    textSize(30);
    text("Galactic Treasure",78,100);
    
    textSize(20);
 
}
if(currentScene === 2)
{
     // static
    background(0, 0, 0);
    for (var i = 0; i < 21; i++) {
        starXposition.push(random(25,375));
        starYposition.push(random(25,375));
        image(getImage("space/star"),starXposition[i],starYposition[i],10,10);
    }
    fill(255, 255, 255);
    text("Score: " + score, 15, 10);
   
    for (var i = 0; i < rocks.length; i++) {
        rocks[i].draw();
        ship.checkForRockGrab(rocks[i]);
        rocks[i].x -= rockSpeed;
    }

   for (var i = 0; i < golds.length; i++) {
        golds[i].draw();
        ship.checkForGoldGrab(golds[i]);
        golds[i].x -= 3;
   }
   
    if (keyIsPressed && keyCode === UP) {
        ship.hop();
    } else if (keyIsPressed && keyCode === DOWN) {
        ship.fall();
    }
    ship.draw();
    
    if(score === 10){
       rockSpeed = 3.5;
}
 else if(score === 20){
       rockSpeed = 4;
}
 else if(score === 30){
       rockSpeed = 4.5;
}
 else if(score === 40){
       rockSpeed = 5;
}
}
if(currentScene === 3)
{
gameover();
}
};
